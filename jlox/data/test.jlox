print " ===Declaration=== ";
var a = 1;
var b = 1;
print a + b;

print " ===Assignment=== ";
print a = 2;

print " ===Scoping=== ";
var a = "global a";
var b = "global b";
var c = "global c";
{
  var a = "outer a";
  var b = "outer b";
  {
    var a = "inner a";
    print a;
    print b;
    print c;
  }
  print a;
  print b;
  print c;
}

print a;
print b;
print c;

print " ===Control Flow=== ";
print "hi" or 2;
var x = 1;
var y = 2;
print x < y;

if (x > y) {
    print "X > Y";
} else {
    print "X <= Y";
}

while (x <= y) {
    x = x + 1;
    print "In-side wile loop";
}

for (var i = 1; i < 1000; i = i + 1) {
    if (i == 999) {
        print "Round 999";
    }
}

/*
@note
Simple example of lox.
In the future we are going to support stuff like:
    - Type omitted declaration: a := 10;
    - Type specific function declarations: fun::(a: number, b: number);
*/

/*
var x = 10;
var y = 20;

class A {
    A(x, y) {
        this.a = x;
        this.b = y
    }

    // A simple loop
    fun loop() {
        for (var x = 0; x < 20; x++) {
            if(x = 10) continue;
            a = a * 2;
            b = b / 1;
        }
    }

    // A simple getter
    fun get_b() {
        return b;
    }
}

var a = A(x, y);
*/